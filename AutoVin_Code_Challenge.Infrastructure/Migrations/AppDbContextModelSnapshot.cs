// <auto-generated />
using System;
using AutoVin_Code_Challenge.Infrastructure.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AutoVin_Code_Challenge.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AutoVin_Code_Challenge.Infrastructure.Entities.AccountType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BankId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.ToTable("AccountTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3efdedd6-75b9-4acf-9704-1101fceea114"),
                            BankId = new Guid("18e1d071-8b97-45d3-bff8-03f78f3160eb"),
                            CreatedOn = new DateTime(2022, 1, 12, 0, 23, 11, 581, DateTimeKind.Utc).AddTicks(2432),
                            LastModifiedOn = new DateTime(2022, 1, 12, 0, 23, 11, 581, DateTimeKind.Utc).AddTicks(2447),
                            Name = "Checking"
                        },
                        new
                        {
                            Id = new Guid("e1c49eb7-7d32-4eac-b0f0-e7b264f3a873"),
                            BankId = new Guid("18e1d071-8b97-45d3-bff8-03f78f3160eb"),
                            CreatedOn = new DateTime(2022, 1, 12, 0, 23, 11, 581, DateTimeKind.Utc).AddTicks(2724),
                            LastModifiedOn = new DateTime(2022, 1, 12, 0, 23, 11, 581, DateTimeKind.Utc).AddTicks(2726),
                            Name = "Individual Investment"
                        },
                        new
                        {
                            Id = new Guid("d9b09f00-fed9-4d7c-a8bb-01ba171628cb"),
                            BankId = new Guid("18e1d071-8b97-45d3-bff8-03f78f3160eb"),
                            CreatedOn = new DateTime(2022, 1, 12, 0, 23, 11, 581, DateTimeKind.Utc).AddTicks(2752),
                            LastModifiedOn = new DateTime(2022, 1, 12, 0, 23, 11, 581, DateTimeKind.Utc).AddTicks(2753),
                            Name = "Individual Investment"
                        });
                });

            modelBuilder.Entity("AutoVin_Code_Challenge.Infrastructure.Entities.Bank", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Banks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("18e1d071-8b97-45d3-bff8-03f78f3160eb"),
                            CreatedOn = new DateTime(2022, 1, 12, 0, 23, 11, 579, DateTimeKind.Utc).AddTicks(5257),
                            LastModifiedOn = new DateTime(2022, 1, 12, 0, 23, 11, 579, DateTimeKind.Utc).AddTicks(5598),
                            Name = "Test Bank"
                        });
                });

            modelBuilder.Entity("AutoVin_Code_Challenge.Infrastructure.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BankId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("OtherName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("55212420-ef6b-40eb-8084-179e5eedd283"),
                            BankId = new Guid("18e1d071-8b97-45d3-bff8-03f78f3160eb"),
                            CreatedOn = new DateTime(2022, 1, 12, 0, 23, 11, 581, DateTimeKind.Utc).AddTicks(5080),
                            FirstName = "Richard",
                            Surname = "Aidoo"
                        });
                });

            modelBuilder.Entity("AutoVin_Code_Challenge.Infrastructure.Entities.CustomerAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<Guid>("AccountTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountTypeId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerAccounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ae7e0c28-fe19-44fd-8fb5-6a9eb8c7046b"),
                            AccountNumber = "",
                            AccountTypeId = new Guid("e1c49eb7-7d32-4eac-b0f0-e7b264f3a873"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = new Guid("55212420-ef6b-40eb-8084-179e5eedd283")
                        });
                });

            modelBuilder.Entity("AutoVin_Code_Challenge.Infrastructure.Entities.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TransactionTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CustomerAccountId");

                    b.HasIndex("TransactionTypeId");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("69d61395-47db-4374-b631-66d0dcd4a9fb"),
                            Amount = 10000.0,
                            CreatedOn = new DateTime(2022, 1, 12, 0, 23, 11, 581, DateTimeKind.Utc).AddTicks(8144),
                            CustomerAccountId = new Guid("ae7e0c28-fe19-44fd-8fb5-6a9eb8c7046b"),
                            TransactionTypeId = new Guid("4ddc3ee3-2845-434e-beac-5ea577c595d6")
                        },
                        new
                        {
                            Id = new Guid("918eb616-307a-452b-90b6-d5b6c69f6532"),
                            Amount = 500.0,
                            CreatedOn = new DateTime(2022, 4, 12, 0, 23, 11, 581, DateTimeKind.Utc).AddTicks(8337),
                            CustomerAccountId = new Guid("ae7e0c28-fe19-44fd-8fb5-6a9eb8c7046b"),
                            TransactionTypeId = new Guid("fc1eb2a3-15e2-473f-849f-ebe128716a05")
                        },
                        new
                        {
                            Id = new Guid("98046320-fb31-4795-b6f6-11ff141051d8"),
                            Amount = 1500.0,
                            CreatedOn = new DateTime(2022, 2, 17, 0, 23, 11, 581, DateTimeKind.Utc).AddTicks(8537),
                            CustomerAccountId = new Guid("ae7e0c28-fe19-44fd-8fb5-6a9eb8c7046b"),
                            TransactionTypeId = new Guid("fc1eb2a3-15e2-473f-849f-ebe128716a05")
                        });
                });

            modelBuilder.Entity("AutoVin_Code_Challenge.Infrastructure.Entities.TransactionType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("TransactionTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4ddc3ee3-2845-434e-beac-5ea577c595d6"),
                            CreatedOn = new DateTime(2022, 1, 12, 0, 23, 11, 581, DateTimeKind.Utc).AddTicks(3580),
                            Name = "Deposit"
                        },
                        new
                        {
                            Id = new Guid("fc1eb2a3-15e2-473f-849f-ebe128716a05"),
                            CreatedOn = new DateTime(2022, 1, 12, 0, 23, 11, 581, DateTimeKind.Utc).AddTicks(3762),
                            Name = "Withdraw"
                        },
                        new
                        {
                            Id = new Guid("98690649-0319-4519-adf4-dd58845f8bf1"),
                            CreatedOn = new DateTime(2022, 1, 12, 0, 23, 11, 581, DateTimeKind.Utc).AddTicks(3787),
                            Name = "Transfer"
                        });
                });

            modelBuilder.Entity("AutoVin_Code_Challenge.Infrastructure.Entities.AccountType", b =>
                {
                    b.HasOne("AutoVin_Code_Challenge.Infrastructure.Entities.Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bank");
                });

            modelBuilder.Entity("AutoVin_Code_Challenge.Infrastructure.Entities.Customer", b =>
                {
                    b.HasOne("AutoVin_Code_Challenge.Infrastructure.Entities.Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bank");
                });

            modelBuilder.Entity("AutoVin_Code_Challenge.Infrastructure.Entities.CustomerAccount", b =>
                {
                    b.HasOne("AutoVin_Code_Challenge.Infrastructure.Entities.AccountType", "AccountType")
                        .WithMany()
                        .HasForeignKey("AccountTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoVin_Code_Challenge.Infrastructure.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountType");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("AutoVin_Code_Challenge.Infrastructure.Entities.Transaction", b =>
                {
                    b.HasOne("AutoVin_Code_Challenge.Infrastructure.Entities.CustomerAccount", "CustomerAccount")
                        .WithMany()
                        .HasForeignKey("CustomerAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoVin_Code_Challenge.Infrastructure.Entities.TransactionType", "TransactionType")
                        .WithMany()
                        .HasForeignKey("TransactionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerAccount");

                    b.Navigation("TransactionType");
                });
#pragma warning restore 612, 618
        }
    }
}
